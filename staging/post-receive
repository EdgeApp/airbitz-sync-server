#!/usr/bin/env python

import ConfigParser
import os
import subprocess
import sys

def get_servers():
    config = ConfigParser.ConfigParser()
    config.read('/etc/absync.conf')
    return config.get('Servers', 'servers').split(",")

def create_repo_url(url):
    import urlparse
    s = urlparse.urlsplit(url)
    return s.scheme + '://' + s.netloc + '/api/v1/repo/create/'

def request_repo(url, name):
    import json, urllib2
    data = json.dumps({"repo_name", name})
    req = urllib2.Request(create_repo_url(), data, {'Content-Type': 'application/json'})
    try:
        s = urllib2.urlopen(req)
        return s.getcode() in (200, 201)
    except:
        return False

SERVERS = get_servers();
basename = os.path.basename(os.getcwd())

# Sync master branches across other servers
for server in SERVERS:
    path = "{0}/{1}".format(server, basename)
    if subprocess.call(["git", "push", path, "master"]) > 0:
        if path.find('://') > 0:
            success = request_repo()
        else:
            subprocess.call(["mkdir", "-p", path])
            success = subprocess.call(["git", "init", "--bare", path]) == 0
        subprocess.call(["git", "push", path, "master"])


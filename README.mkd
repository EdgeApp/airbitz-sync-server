# Sync Server

This is a simple rest API to create new repos. The django apps calls
`staging/create_repo.sh`. 

# Running background queue

In order to run the celery client, execute the following command.

    DJANGO_SETTINGS_MODULE=syncserver.settings celery -A syncserver -l info worker

This will consume all tasks to sync local repositories with the servers listed in `/etc/absync/absync.conf`.

# Helper scripts

Due to the nature of celery and rabbitmq, the worker queues will occasionally get "stuck" and fail to process additional tasks. This is frequently caused by a hang in a Git process. In addition, the P2P network of Git servers may get out of sync at times. The following helper scripts should get installed in the system crontab to assist with these issues. The sync servers are also used as a means to check that the Android APK at airbitz.co/download has a valid hash and has not been replaced. The `apk_check.sh` will monitor the APK and alert if needed.

Place `fix_stuck.js`, `sync_repos.js`, `apk_check.sh`, and `gc_repos.sh` in the user's home directory.

Install Nodejs minimum version 6.5

    sudo apt-get update
    curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
    sudo apt-get install nodejs
    
Install the cron jobs
    
    crontab -e
    
Enter the following lines

    */5 * * * * $HOME/check_apk.sh 2>&1 >> $HOME/check_apk.log
    0 20 1 * * $HOME/gc_repos.sh 2>&1 1>$HOME/gc_repos.log
    45 3 * * * node $HOME/sync_repos.js 2>&1 1>$HOME/sync_repos.log
    */5 * * * * node $HOME/fix_stuck.js 2>&1 1>$HOME/fix_stuck.log
    
    
